version: "3.4"

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    env_file: .env
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8080:80/tcp"
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD:
      WEBPASSWORD_FILE: '/opt/pihole/secrets/admin_pw.txt'
      DNSMASQ_USER:  'root'
    volumes:
      - "/opt/pihole/etc-pihole/:/etc/pihole/"
      - "/opt/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/"
    restart: unless-stopped
#  lancache:
#    image: lancachenet/monolithic:latest
#    container_name: lancache
#    env_file: .env
#    restart: unless-stopped
#    ports:
#      - 80:80/tcp
#      - 443:443/tcp
#    volumes:
#      - ${CACHE_ROOT}/cache:/data/cache
#      - ${CACHE_ROOT}/logs:/data/logs
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - /opt/Tautulli:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    ports:
      - "8181:8181"
  ombi:
    image: lscr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${PUID}
      - GUID=${PGID}
      - TZ=${TZ}
      - BASE_URL=/ombi
    volumes:
      - /opt/Ombi:/config
    ports:
      - "3579:3579"
    restart:  unless-stopped
  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf:/etc/letsencrypt/:ro
    restart:  unless-stopped
  certbot_www:
    container_name: certbot_www
    image: certbot/certbot
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot:rw
    command: certonly --webroot -w /var/www/certbot --force-renewal --email trekkie@nomorestars.com -d www.nomorestars.com --agree-tos
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
      - 8268:8268 # Example extra node port
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
      - serverIP=192.168.1.70
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=PlexServerNode
    volumes:
      - /home/plex/tdarr/server:/app/server
      - /home/plex/tdarr/configs:/app/configs
      - /home/plex/tdarr/logs:/app/logs
      - /mnt/media/library:/media
      - /home/plex/transcode_cache:/temp
#  certbot_teslamate:
#    container_name: certbot_teslamate
#    image: certbot/certbot
#    volumes:
#      - ./certbot/conf_tm:/etc/letsencrypt
#      - ./certbot/www_tm:/var/www/certbot:rw
#    command:  
#  teslamate: certonly --webroot -w /var/www/certbot --force-renewal --email trekkie@nomorestars.com -d teslamate.nomorestars.com --agree-tos
#      image: teslamate/teslamate:latest
#      restart: always
#      environment:
#        - ENCRYPTION_KEY=${TM_ENCRYPTION_KEY}
#        - DATABASE_USER=${TM_DB_USER}
#        - DATABASE_PASS=${TM_DB_PASS}
#        - DATABASE_NAME=${TM_DB_NAME}
#        - DATABASE_HOST=database
#        - MQTT_HOST=mosquitto
#        - VIRTUAL_HOST=${FQDN_TM}
#        - CHECK_ORIGIN=true
#        - TZ=${TZ}
#      ports:
#        - 4000:4000
#      volumes:
#        - ./import:/opt/app/import
#      cap_drop:
#        - all
  
#    database:
#      image: postgres:13
#      restart: always
#      environment:
#        - POSTGRES_USER=${TM_DB_USER}
#        - POSTGRES_PASSWORD=${TM_DB_PASS}
#        - POSTGRES_DB=${TM_DB_NAME}
#      volumes:
#        - teslamate-db:/var/lib/postgresql/data
#  
#    grafana:
#      image: teslamate/grafana:latest
#      restart: always
#      environment:
#        - DATABASE_USER=${TM_DB_USER}
#        - DATABASE_PASS=${TM_DB_PASS}
#        - DATABASE_NAME=${TM_DB_NAME}
#        - DATABASE_HOST=database
#        - GRAFANA_PASSWD=${GRAFANA_PW}
#        - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
#        - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PW}
#        - GF_AUTH_ANONYMOUS_ENABLED=false
#        - GF_SERVER_DOMAIN=${FQDN_TM}
#        - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
#        - GF_SERVER_SERVE_FROM_SUB_PATH=true
#      ports:
#        - 3000:3000
#      volumes:
#        - teslamate-grafana-data:/var/lib/grafana
  
#    mosquitto:
#      image: eclipse-mosquitto:2
#      restart: always
#      command: mosquitto -c /mosquitto-no-auth.conf
      # ports:
      #   - 1883:1883
#      volumes:
#        - mosquitto-conf:/mosquitto/config
#        - mosquitto-data:/mosquitto/data
  
#  volumes:
#    teslamate-db:
#    teslamate-grafana-data:
#    mosquitto-conf:
#    mosquitto-data:
version: "2.4"

services:
  fileflows:
    image: revenz/fileflows
    container_name: fileflows
    env_file: .env
    environment:
      - TZ=${TZ}
    volumes:
      - /opt/fileflows:/app/Data
      - /var/log/FileFlow:/app/Logs
      - /mnt/naslib/plex/library:/media  #optional
      - /mnt/naslib/plex/nzbget/downloads:/nzbget
    ports:
      - 5000:5000
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    env_file: .env
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8080:80/tcp"
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD:
      WEBPASSWORD_FILE: '/mnt/piholeopt:/secrets/admin_pw.txt'
      DNSMASQ_USER:  'root'
    volumes:
      - "/mnt/piholeopt/etc-pihole/:/etc/pihole/"
      - "/mnt/piholeopt/etc-dnsmasq.d/:/etc/dnsmasq.d/"
    restart: unless-stopped
#  lancache:
#    image: lancachenet/monolithic:latest
#    container_name: lancache
#    env_file: .env
#    restart: unless-stopped
#    ports:
#      - 8080:80/tcp
#      - 8443:443/tcp
#    volumes:
#      - ${CACHE_ROOT}/cache:/data/cache
#      - ${CACHE_ROOT}/logs:/data/logs
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    env_file: .env
    volumes:
      - /opt/Tautulli:/config
      - /home/plex:/home
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "8181:8181"
  ombi:
    image: lscr.io/linuxserver/ombi
    container_name: ombi
    env_file: .env
    environment:
      - PUID=${PUID}
      - GUID=${PGID}
      - TZ=${TZ}
      - BASE_URL=/ombi
    volumes:
      - /opt/Ombi:/config
    ports:
      - "3579:3579"
    restart:  unless-stopped
  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf:/etc/letsencrypt/:ro
    restart:  unless-stopped
  certbot_www:
    container_name: certbot_www
    image: certbot/certbot
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot:rw
    command: certonly --webroot -w /var/www/certbot --force-renewal --email trekkie@nomorestars.com -d www.nomorestars.com --agree-tos
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /mnt/piholeopt/config-homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
  wp:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - ${IP}:7080:80 # change ip if required
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db_wp
    links:
      - db_wp
  
  wpcli:
    image: wordpress:cli
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db_wp
      - wp
  
  pma:
    image: phpmyadmin/phpmyadmin
    environment:
      # https://docs.phpmyadmin.net/en/latest/setup.html#docker-environment-variables
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      UPLOAD_LIMIT: 50M
    ports:
      - ${IP}:9080:80
    links:
      - db_wp:db
  
  db_wp:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - ${IP}:3306:3306 # change ip if required
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
volumes:
  db_data: